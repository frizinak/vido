#! /bin/bash

set -e

### CONFIG
PROXYDIR="./.vido-parts"
CLUT=
STAB=
FILTER_BEFORE=
FILTER_AFTER=
PROXY_MUX_PARAMS=(-c:v dnxhd -profile:v dnxhr_hq -c:a pcm_s16le)
CONCURRENCY=4

### START
rm "$PROXYDIR/"*".tmp" 2>/dev/null || :
parts=()
nw_files=()
ex_files=("$PROXYDIR/part-"*)

processes=0

lbl=0
while read -r line; do
    line="$(echo "$line" | sed 's/#.*//')"
    if [ "$(echo "$line" | sed 's/ +//g')" = "" ];then
        continue
    fi

    echo
    if echo "$line" | grep -E '^\s*[_a-zA-Z0-9]+=' &>/dev/null; then
        printf 'Assigning %s\n' "$(echo "$line" | cut -d= -f1)"
        eval "$line"
        continue
    fi

    lbl=$(( lbl + 1 ))
    mkdir "$PROXYDIR" 2>/dev/null || :
    part="$(echo "$line" | grep -Eo '^.*[0-9_:\.]+-[0-9_:\.]+')"
    usrf="$( echo "${line:${#part}}" | sed  -E 's/(^\s*)|(\s*$)//g')"
    file="$(echo "$part" | rev | cut -d' ' -f2- | rev)"
    time="$(echo "$part" | rev | cut -d ' ' -f1 | rev | sed 's/_/0/g')"
    from="$(echo "$time" | cut -d- -f1)"
    till="$(echo "$time" | cut -d- -f2)"
    if [ "$(echo "$till" | sed 's/[0_:\.]\+//g')" = "" ]; then
        till=""
    fi

    prefix=(ffmpeg -hide_banner -nostdin -loglevel error -hwaccel:v auto -filter_complex_threads 6 -filter_threads 6 -ss "$from")
    if [ "$till" != "" ]; then
        prefix+=(-to "$till")
    fi
    prefix+=(-i "$file")

    # outfile_prefix="$(printf '%s/%03d-' "$PROXYDIR" $lbl)"
    outfile_prefix="$(printf '%s/part-' "$PROXYDIR")"

    hash_stab="$(echo "${prefix[*]}" | sha1sum - | cut -d' ' -f1)"
    outfile_stab="$(printf '%s%s.stab' "$outfile_prefix" "$hash_stab")"

    filters=""
    if [ "$STAB" != "" ]; then
        filters="${filters},[main]vidstabtransform=$STAB:input=${outfile_stab}[main],[main]unsharp=5:5:0.8:3:3:0.4[main]"
    fi
    if [ "$CLUT" != "" ]; then
        filters="${filters},[main][1]haldclut=interp=nearest[main]"
    fi
    if [ "$usrf" != "" ]; then
        filters="[main]${usrf}[main],${filters}"
    fi
    if [ "$FILTER_BEFORE" != "" ]; then
        filters="[main]${FILTER_BEFORE}[main],${filters}"
    fi
    if [ "$FILTER_AFTER" != "" ]; then
        filters="${filters},[main]${FILTER_AFTER}[main]"
    fi
    filters="${filters},[main]format=yuv420p[main]"
    filters="$(echo "$filters" | sed 's/^,//' | sed 's/,\+/,/g' | sed 's/\[main\]/[0]/')"

    suffix=("${PROXY_MUX_PARAMS[@]}" -map '[main]' -map '0:a')
    hash_main="$(echo "${prefix[*]} $CLUT $filters ${suffix[*]}" | sha1sum - | cut -d' ' -f1)"
    outfile_main="$(printf '%s%s.mov'  "$outfile_prefix" "$hash_main")"
    echo "TODO '$filters'"
    exit

    while [[ processes -ge CONCURRENCY ]]; do
        wait -n
        processes=$((processes-1))
    done

    processes=$((processes+1))
    { \
        set -e;
        if [ "$STAB" != "" ] && [ ! -f "$outfile_stab" ]; then
            printf '\033[1;30;43m %03d) %s [STAB] \033[0m\n' $lbl "$file"
            tmp="$outfile_stab.tmp";
            "${prefix[@]}" -an -vf "vidstabdetect=result=$tmp" -f null - <&- && \
            mv "$tmp" "$outfile_stab"; \
        fi

        if [ "$CLUT" != "" ]; then
            prefix+=(-i "$CLUT")
        fi

        if [ ! -f "$outfile_main" ]; then
            printf '\033[1;30;43m %03d) %s [CONV] \033[0m\n' $lbl "$file"
            tmp="$outfile_main.tmp"

            "${prefix[@]}" \
                -stats \
                -filter_complex "$filters" \
                "${suffix[@]}" \
                -f mov \
                "$tmp" <&- && \
                mv "$tmp" "$outfile_main"; \
        fi

        printf '\033[1;30;42m %03d) %s [DONE] \033[0m\n' $lbl "$file"
    } &

    parts+=("$outfile_main")
    nw_files+=("$outfile_main" "$outfile_stab")
done < Timeline

wait

for ex in "${ex_files[@]}"; do
    found=0
    for n in "${nw_files[@]}"; do
        if [ "$n" == "$ex" ]; then
            found=1
            break
        fi
    done

    if [ $found -eq 0 ]; then
        echo rm "$ex"
    fi
done

echo

cmd=(ffmpeg -loglevel error -stats -hwaccel:v auto -filter_complex_threads 6 -filter_threads 6)
filter=""
lbl=0
for file in "${parts[@]}"; do
    #for ((i = 0 ; i < lbl ; i++)); do
    cmd+=(-i "$file")
    filter="${filter}[$lbl:v:0][$lbl:a:0]"
    lbl=$(( lbl + 1 ))
done
filter="${filter}concat=n=${lbl}:v=1:a=1[v][a]"
cmd+=(-filter_complex "$filter" -map '[v]' -map '[a]' -c:v hevc_nvenc -b_ref_mode 0 -rc vbr -cq 32)

for p in "${cmd[@]}"; do
    echo -n "$p "
    if [ ${#p} -ne 0 ] && [ ${p:0:1} != "-" ]; then
        echo " \\"
        echo -n "  "
    fi
done
echo "out.mp4"
